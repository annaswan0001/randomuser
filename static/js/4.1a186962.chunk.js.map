{"version":3,"sources":["views/Users/UserList/UserList.module.css","components/Input/Input.module.css","views/Users/UserLists.module.css","redux/actions/usersAction.jsx","views/Users/UserList/UserList.jsx","components/Input/Input.jsx","views/Users/Search/Search.jsx","views/Users/UsersLists.jsx"],"names":["module","exports","usersInit","users","dispatch","usersFetchStart","length","axios","get","then","res","console","log","data","results","usersFetchSuccsess","catch","err","usersFetchFail","type","actionsType","userFetchStart","userFetchSuccsess","user","UserList","props","classesArray","classes","Card","Transform","className","CardList","onClick","getDetailInfo","join","Face","src","picture","medium","alt","ContainText","name","first","last","id","value","Math","random","input","inputElement","elementtype","InputElement","ref","forwardedref","Input","Label","label","Search","useState","enteredFilter","setEnteredFilter","filterUsers","inputRef","useRef","useEffect","timer","setTimeout","current","clearTimeout","Fragment","style","color","fontWeight","htmlFor","onChange","e","preventDefault","target","placeholder","filterUser","filter","newUsers","toLowerCase","indexOf","connect","state","usersData","usersFilter","getUserInfo","userListRefresh","getState","isFetching","setIsFetching","history","useCallback","trim","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","uuid","allUsers","login","push","ButtonRefresh","Button","CardListContainer","map","key"],"mappings":"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","file":"static/js/4.1a186962.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardList\":\"UserList_CardList__fUQ0U\",\"Cards\":\"UserList_Cards___Hjvo\",\"Card\":\"UserList_Card__1m2zX\",\"ContainText\":\"UserList_ContainText__3dPGJ\",\"Face\":\"UserList_Face__2kvS1\",\"Extra\":\"UserList_Extra__ilIv1\",\"Disappear\":\"UserList_Disappear__1FT7i\",\"Appear\":\"UserList_Appear__1CiuH\",\"appear\":\"UserList_appear__38hU3\",\"Transform\":\"UserList_Transform__1lHzo\",\"Transform-active\":\"UserList_Transform-active__3ktBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Input_Label__2XMBp\",\"InputElement\":\"Input_InputElement__k202p\",\"mui-auto-fill-cancel\":\"Input_mui-auto-fill-cancel__PMone\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardList\":\"UserLists_CardList__MtK4o\",\"Search\":\"UserLists_Search__2OhnS\",\"CardListContainer\":\"UserLists_CardListContainer__15Zvi\",\"ButtonRefresh\":\"UserLists_ButtonRefresh__dq0jP\"};","import axios from \"axios\";\nimport * as actionsType from \"../actions/actionTypes\";\n\n//USERS\nexport const usersInit = (users) => (dispatch) => {\n  dispatch(usersFetchStart());\n  if (users.length < 100) {\n    axios\n      .get(\"https://randomuser.me/api/?results=50\")\n      //.get(\"https://randomuser.me/api/?results=50&inc=name,login,picture,id\")\n      .then((res) => {\n        console.log(res.data.results);\n        dispatch(usersFetchSuccsess(res.data.results));\n      })\n      .catch((err) => {\n        dispatch(usersFetchFail());\n      });\n  } else {\n    return;\n  }\n};\nexport const usersFetchStart = () => ({\n  type: actionsType.USERS_FETCH_START,\n});\nexport const usersFetchSuccsess = (users) => ({\n  type: actionsType.USERS_FETCH_SUCCESS,\n  users,\n});\nexport const usersFetchFail = () => ({\n  type: actionsType.USERS_FETCH_FAIL,\n});\n\n//Action provides users filtering\nexport const usersFilter = (filter) => ({\n  type: actionsType.USERS_FILTER,\n  filter,\n});\n\n//Action provides reset userList data\nexport const usersReset = () => ({\n  type: actionsType.USERS_RESET,\n});\n\n//Action provides refreth userList data\nexport const userListRefresh = () => (dispatch, getState) => {\n  dispatch(usersReset());\n  console.log(getState().users.usersData);\n  dispatch(usersInit(getState().users.usersData));\n};\n\n\n\n//USER\nexport const getUserInfo = (user) => (dispatch) => {\n  dispatch(userFetchStart());\n  if (user) {\n    dispatch(userFetchSuccsess(user));\n\n    // if randomUser had below setting - we could have been to get user data by uuid\n    // axios\n    //   .get(`https://randomuser.me/api?uuid=${userUuid}`)\n    //   .then((res) => {\n    //     console.log(res.data.results);\n    //     dispatch(userFetchSuccsess(res.data.results));\n    //   })\n    //   .catch((err) => {\n    //     dispatch(userFetchFail()); t\n    //   });\n  }\n};\n\nexport const userFetchStart = () => ({\n  type: actionsType.USER_FETCH_START,\n});\nexport const userFetchSuccsess = (user) => ({\n  type: actionsType.USER_FETCH_SUCCESS,\n  user,\n});\nexport const userFetchFail = () => ({\n  type: actionsType.USER_FETCH_FAIL,\n});\n\n\n","import React from \"react\";\nimport classes from \"./UserList.module.css\";\n\nexport default function UserList(props) {\n  const classesArray = [classes.Card, classes.Transform];\n  return (\n    <li className={classes.CardList} onClick={props.getDetailInfo}>\n      <div className={classesArray.join(\" \")}>\n        <div className={classes.Face}>\n          <img src={props.user.picture.medium} alt=\"photo\" />\n        </div>\n        <div className={classes.ContainText}>\n          <h3>\n            HI! I am {props.user.name.first} {props.user.name.last}\n          </h3>\n          <p>\n            My id:\n            {props.user.id.value && props.user.id.value.length > 0\n              ? props.user.id.value\n              : Math.random()}\n          </p>\n        </div>\n      </div>\n    </li>\n  );\n}\n","import React from \"react\";\n\nimport classes from \"./Input.module.css\";\n\nconst input = (props) => {\n  let inputElement;\n  switch (props.elementtype) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={classes.InputElement}\n          ref={props.forwardedref}\n          {...props}\n        />\n      );\n      break;\n    default: {\n      return inputElement; //we can add select /textareas and ect\n    }\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default input;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Input from \"../../../components/Input/Input\";\n\nexport default function Search(props) {\n  const [enteredFilter, setEnteredFilter] = useState(\" \");\n\n  const { filterUsers } = props;\n\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n      const timer = setTimeout(() => {\n        if (enteredFilter === inputRef.current.value) {\n          filterUsers(enteredFilter);\n        }\n      }, 1000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [enteredFilter, inputRef, filterUsers]);\n\n  const changeInputValue = (e) => {\n    e.preventDefault();\n    setEnteredFilter(e.target.value);\n    \n  };\n\n  return (\n<React.Fragment>\n    <label style={{color:\"#1976d2\", fontWeight:\"900\"}} htmlFor=\"filter\"> Enter user name...</label>\n      <Input\n        elementtype =\"input\"\n        forwardedref={inputRef}\n        type=\"text\"\n        value={enteredFilter}\n        onChange={changeInputValue}\n        placeholder=\"First(last) name\"\n        name=\"filter\"\n      />\n</React.Fragment>\n  );\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  usersInit,\n  usersFilter,\n  getUserInfo,\n  userListRefresh,\n} from \"../../redux/actions/usersAction\";\nimport UserList from \"./UserList/UserList\";\nimport Search from \"./Search/Search\";\nimport classes from \"./UserLists.module.css\";\nimport Button from \"../../components/Button/Button\";\n\nconst filterUser = (users, filter) => {\n  if (users) {\n    if (!filter) {\n      return users;\n    } else {\n      const newUsers = users.filter((user) => {\n        const fullName =\n          user.name.first.toLowerCase() + \" \" + user.name.last.toLowerCase();\n        return fullName.indexOf(filter.toLowerCase()) >= 0;\n      });\n      console.log(newUsers);\n      return newUsers;\n    }\n  }\n}; // utils for correct filtering users from MapStateTpProps\n\nfunction Users(props) {\n  const [isFetching, setIsFetching] = useState(false); // for making infinite-scroll\n\n  const {\n    users,\n    usersInit,\n    usersFilter,\n    getUserInfo,\n    userListRefresh,\n    history,\n  } = props;\n\n  const filterUsers = useCallback(\n    (filter) => {\n      usersFilter(filter.trim());\n    },\n    [usersFilter]\n  );\n\n  const handleScroll = useCallback(() => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n        document.documentElement.offsetHeight ||\n      isFetching\n    )\n      return;\n    setIsFetching(true);\n  }, [isFetching]); //add onScroll+ 50 users\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [handleScroll]);\n\n  useEffect(() => {\n    if (users.length === 0) {\n      usersInit(users);\n      setIsFetching(false);\n    }\n  }, [usersInit, setIsFetching]);\n\n  useEffect(() => {\n    if (isFetching) {\n      usersInit(users);\n      setIsFetching(false);\n    }\n  }, [isFetching, usersInit, users, setIsFetching]);\n\n  const getDetailInfo = useCallback(\n    (uuid, allUsers) => {\n      const user = allUsers.filter((user) => user.login.uuid === uuid);\n      console.log(\"detail\", user, uuid, users);\n      getUserInfo(user);\n      history.push(`user/${uuid}`);\n    },\n    [users, getUserInfo, history]\n  );\n\n  const handleDownload = () => {\n    console.log(\"refresh\");\n    userListRefresh();\n  };\n\n  return (\n    <div>\n      <div className={classes.Search}>\n        <Search filterUsers={filterUsers} />\n        <div className={classes.ButtonRefresh}>\n          <Button onClick={handleDownload}> Download new users</Button>\n        </div>\n      </div>\n      <div className={classes.CardListContainer}>\n        <ul className={classes.CardList}>\n          {props.users &&\n            props.users.map((user) => (\n              <UserList\n                getDetailInfo={() =>\n                  getDetailInfo(user.login.uuid, props.users)\n                }\n                key={user.login.uuid}\n                user={user}\n              />\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  users: filterUser(state.users.usersData, state.users.filter),\n});\n\nexport default connect(mapStateToProps, {\n  usersInit,\n  usersFilter,\n  getUserInfo,\n  userListRefresh,\n})(Users);\n"],"sourceRoot":""}